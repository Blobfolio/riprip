[package]
name = "riprip"
version = "0.0.5"
license = "WTFPL"
authors = ["Josh Stoik <josh@blobfolio.com>"]
edition = "2021"
rust-version = "1.70"
description = "An incremental, second-stage audio CD ripper for advanced data recovery."
repository = "https://github.com/Blobfolio/riprip"
readme = "README.md"
publish = false

[package.metadata.deb]
maintainer = "Josh Stoik <hello@blobfolio.com>"
copyright = "2022, Blobfolio, LLC <hello@blobfolio.com>"
license-file = ["../LICENSE", "0"]
revision = "1"
depends = "$auto"
section = "sound"
extended-description = """\
.\n\
Rip Rip Hooray! is a second-stage audio CD ripper for advanced data recovery."""
assets = [
    ["../target/x86_64-unknown-linux-gnu/release/riprip", "usr/bin/", "755"],
    ["../release/completions/riprip.bash", "etc/bash_completion.d/", "644"],
    ["../release/man/riprip.1.gz", "usr/share/man/man1/", "644"],
]

[package.metadata.bashman]
name = "Rip Rip Hooray!"
bash-dir = "../release/completions"
man-dir = "../release/man"
credits-dir = "../"

[[package.metadata.bashman.switches]]
long = "--backwards"
description = "Rip sectors in reverse order. (Data will still be saved in the *correct* order. Haha.)"

[[package.metadata.bashman.switches]]
short = "-h"
long = "--help"
description = "Print help information."

[[package.metadata.bashman.switches]]
long = "--no-c2"
description = "Disable/ignore C2 error pointer information when ripping, e.g. for drives that do not support the feature. (This flag is otherwise not recommended.)"

[[package.metadata.bashman.switches]]
long = "--no-cache-bust"
description = "Do not attempt to reset the optical drive cache between each rip pass."

[[package.metadata.bashman.switches]]
long = "--no-resume"
description = "Ignore any previous rip states; start over from scratch."

[[package.metadata.bashman.switches]]
long = "--no-rip"
description = "Just print the basic disc information to STDERR and exit."

[[package.metadata.bashman.switches]]
long = "--no-trust"
description = "Never trust the drive when it says a sector is good; always get confirmation. Requires a paranoia level of at least 2."

[[package.metadata.bashman.switches]]
long = "--raw"
description = "Save ripped tracks in raw PCM format (instead of WAV)."

[[package.metadata.bashman.switches]]
long = "--reconfirm"
description = "Reset the status of all previously-accepted samples to require reconfirmation. Requires a paranoia level of at least 2."

[[package.metadata.bashman.switches]]
short = "-V"
long = "--version"
description = "Print program version."

[[package.metadata.bashman.options]]
short = "-d"
long = "--dev"
label = "<PATH>"
description = "The device path for the optical drive containing the CD of interest, like /dev/cdrom. [default: auto]"
path = true

[[package.metadata.bashman.options]]
short = "-o"
long = "--offset"
label = "<SAMPLES>"
description = "The AccurateRip, et al, sample read offset to apply to data retrieved from the drive. [default: auto or 0; range: Â±5880]"

[[package.metadata.bashman.options]]
long = "--paranoia"
label = "<NUM>"
description = "When a sample or its neighbors have a C2 or read error, treat all samples in the region as supicious until the drive returns the same value <NUM> times, or AccurateRip or CTDB matches with a confidence of <NUM> are found. When combined with --no-trust, *all* samples are subject to confirmation regardless of status. [default: 3; range: 1..=32]"

[[package.metadata.bashman.options]]
long = "--refine"
label = "<NUM>"
description = "Execute up to <NUM> additional rip passes for each track while any samples remain unread/unconfirmed. [default: 0; max: 15]"

[[package.metadata.bashman.options]]
short = "-t"
long = "--track"
label = "<NUM>"
description = "Rip one or more specific tracks (rather than the whole disc). Multiple tracks can be separated by commas (2,3), specified as an inclusive range (2-3), and/or given their own -t/--track (-t 2 -t 3). [default: the whole disc]"
duplicate = true

[dependencies]
argyle = "0.6.*"
ctrlc = "3.4.*"
dactyl = "0.5"
oxford_join = "0.2.*"
trimothy = "0.1.*"

[dependencies.fyi_msg]
version = "0.11.*"
features = [ "progress" ]

[dependencies.riprip_core]
path = "../riprip_core"
features = [ "bin" ]
